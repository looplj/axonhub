version: '0.1'

services:
  # PostgreSQL 数据库
  postgres:
    image: postgres:15-alpine
    container_name: axonhub-postgres
    environment:
      POSTGRES_DB: axonhub
      POSTGRES_USER: axonhub
      POSTGRES_PASSWORD: ${DB_PASSWORD:-axonhub_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - axonhub-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U axonhub"]
      interval: 10s
      timeout: 5s
      retries: 5

  # AxonHub 主服务
  axonhub:
    build: .
    container_name: axonhub-app
    environment:
      AXONHUB_DB_DIALECT: postgres
      AXONHUB_DB_DSN: postgres://axonhub:${DB_PASSWORD:-axonhub_password}@postgres:5432/axonhub?sslmode=disable
      AXONHUB_SERVER_PORT: 8090
      AXONHUB_LOG_LEVEL: info
      AXONHUB_LOG_ENCODING: json
    ports:
      - "8090:8090"
    volumes:
      - ./config.yml:/root/config.yml:ro
      - axonhub_data:/data
    networks:
      - axonhub-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8090/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis 缓存 (可选)
  redis:
    image: redis:7-alpine
    container_name: axonhub-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - axonhub-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # Nginx 反向代理 (可选)
  nginx:
    image: nginx:alpine
    container_name: axonhub-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - axonhub-network
    depends_on:
      - axonhub
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  axonhub_data:

networks:
  axonhub-network:
    driver: bridge