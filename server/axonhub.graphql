type ModelMapping {
  from: String!
  to: String!
}

type ChannelSettings {
  modelMappings: [ModelMapping!]
}

input ModelMappingInput {
  from: String!
  to: String!
}

input ChannelSettingsInput {
  modelMappings: [ModelMappingInput!]
}

# extend input CreateChannelInput {
#   settings: ChannelSettingsInput @goField(omittable: true)
# }

# extend input UpdateChannelInput{
#   settings: ChannelSettingsInput @goField(omittable: true)
# }

scalar JSONRawMessage
scalar JSONRawMessageInput

input SignInInput {
  email: String!
  password: String!
}

type SignInPayload {
  user: User!
  token: String!
}

type Mutation {
    createChannel(input: CreateChannelInput!): Channel!
    updateChannel(id: ID!, input: UpdateChannelInput!): Channel!

    createAPIKey(input: CreateAPIKeyInput!): APIKey!

    createUser(input: CreateUserInput!): User!
    updateUser(id: ID!, input: UpdateUserInput!): User!
    deleteUser(id: ID!): Boolean!

    createRole(input: CreateRoleInput!): Role!
    updateRole(id: ID!, input: UpdateRoleInput!): Role!

    signIn(input: SignInInput!): SignInPayload!
}