// Code generated by ent, DO NOT EDIT.

package runtime

import (
	"context"
	"time"

	"github.com/looplj/axonhub/internal/ent/apikey"
	"github.com/looplj/axonhub/internal/ent/channel"
	"github.com/looplj/axonhub/internal/ent/request"
	"github.com/looplj/axonhub/internal/ent/requestexecution"
	"github.com/looplj/axonhub/internal/ent/role"
	"github.com/looplj/axonhub/internal/ent/schema"
	"github.com/looplj/axonhub/internal/ent/system"
	"github.com/looplj/axonhub/internal/ent/usagelog"
	"github.com/looplj/axonhub/internal/ent/user"
	"github.com/looplj/axonhub/internal/objects"

	"entgo.io/ent"
	"entgo.io/ent/privacy"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	apikeyMixin := schema.APIKey{}.Mixin()
	apikey.Policy = privacy.NewPolicies(schema.APIKey{})
	apikey.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := apikey.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	apikeyMixinHooks1 := apikeyMixin[1].Hooks()

	apikey.Hooks[1] = apikeyMixinHooks1[0]
	apikeyMixinInters1 := apikeyMixin[1].Interceptors()
	apikey.Interceptors[0] = apikeyMixinInters1[0]
	apikeyMixinFields0 := apikeyMixin[0].Fields()
	_ = apikeyMixinFields0
	apikeyMixinFields1 := apikeyMixin[1].Fields()
	_ = apikeyMixinFields1
	apikeyFields := schema.APIKey{}.Fields()
	_ = apikeyFields
	// apikeyDescCreatedAt is the schema descriptor for created_at field.
	apikeyDescCreatedAt := apikeyMixinFields0[0].Descriptor()
	// apikey.DefaultCreatedAt holds the default value on creation for the created_at field.
	apikey.DefaultCreatedAt = apikeyDescCreatedAt.Default.(func() time.Time)
	// apikeyDescUpdatedAt is the schema descriptor for updated_at field.
	apikeyDescUpdatedAt := apikeyMixinFields0[1].Descriptor()
	// apikey.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	apikey.DefaultUpdatedAt = apikeyDescUpdatedAt.Default.(func() time.Time)
	// apikey.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	apikey.UpdateDefaultUpdatedAt = apikeyDescUpdatedAt.UpdateDefault.(func() time.Time)
	// apikeyDescDeletedAt is the schema descriptor for deleted_at field.
	apikeyDescDeletedAt := apikeyMixinFields1[0].Descriptor()
	// apikey.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	apikey.DefaultDeletedAt = apikeyDescDeletedAt.Default.(int)
	// apikeyDescScopes is the schema descriptor for scopes field.
	apikeyDescScopes := apikeyFields[4].Descriptor()
	// apikey.DefaultScopes holds the default value on creation for the scopes field.
	apikey.DefaultScopes = apikeyDescScopes.Default.([]string)
	// apikeyDescProfiles is the schema descriptor for profiles field.
	apikeyDescProfiles := apikeyFields[5].Descriptor()
	// apikey.DefaultProfiles holds the default value on creation for the profiles field.
	apikey.DefaultProfiles = apikeyDescProfiles.Default.(*objects.APIKeyProfiles)
	channelMixin := schema.Channel{}.Mixin()
	channel.Policy = privacy.NewPolicies(schema.Channel{})
	channel.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := channel.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	channelMixinHooks1 := channelMixin[1].Hooks()

	channel.Hooks[1] = channelMixinHooks1[0]
	channelMixinInters1 := channelMixin[1].Interceptors()
	channel.Interceptors[0] = channelMixinInters1[0]
	channelMixinFields0 := channelMixin[0].Fields()
	_ = channelMixinFields0
	channelMixinFields1 := channelMixin[1].Fields()
	_ = channelMixinFields1
	channelFields := schema.Channel{}.Fields()
	_ = channelFields
	// channelDescCreatedAt is the schema descriptor for created_at field.
	channelDescCreatedAt := channelMixinFields0[0].Descriptor()
	// channel.DefaultCreatedAt holds the default value on creation for the created_at field.
	channel.DefaultCreatedAt = channelDescCreatedAt.Default.(func() time.Time)
	// channelDescUpdatedAt is the schema descriptor for updated_at field.
	channelDescUpdatedAt := channelMixinFields0[1].Descriptor()
	// channel.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	channel.DefaultUpdatedAt = channelDescUpdatedAt.Default.(func() time.Time)
	// channel.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	channel.UpdateDefaultUpdatedAt = channelDescUpdatedAt.UpdateDefault.(func() time.Time)
	// channelDescDeletedAt is the schema descriptor for deleted_at field.
	channelDescDeletedAt := channelMixinFields1[0].Descriptor()
	// channel.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	channel.DefaultDeletedAt = channelDescDeletedAt.Default.(int)
	// channelDescCredentials is the schema descriptor for credentials field.
	channelDescCredentials := channelFields[4].Descriptor()
	// channel.DefaultCredentials holds the default value on creation for the credentials field.
	channel.DefaultCredentials = channelDescCredentials.Default.(*objects.ChannelCredentials)
	// channelDescSettings is the schema descriptor for settings field.
	channelDescSettings := channelFields[7].Descriptor()
	// channel.DefaultSettings holds the default value on creation for the settings field.
	channel.DefaultSettings = channelDescSettings.Default.(*objects.ChannelSettings)
	// channelDescOrderingWeight is the schema descriptor for ordering_weight field.
	channelDescOrderingWeight := channelFields[8].Descriptor()
	// channel.DefaultOrderingWeight holds the default value on creation for the ordering_weight field.
	channel.DefaultOrderingWeight = channelDescOrderingWeight.Default.(int)
	requestMixin := schema.Request{}.Mixin()
	request.Policy = privacy.NewPolicies(schema.Request{})
	request.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := request.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	requestMixinHooks1 := requestMixin[1].Hooks()

	request.Hooks[1] = requestMixinHooks1[0]
	requestMixinInters1 := requestMixin[1].Interceptors()
	request.Interceptors[0] = requestMixinInters1[0]
	requestMixinFields0 := requestMixin[0].Fields()
	_ = requestMixinFields0
	requestMixinFields1 := requestMixin[1].Fields()
	_ = requestMixinFields1
	requestFields := schema.Request{}.Fields()
	_ = requestFields
	// requestDescCreatedAt is the schema descriptor for created_at field.
	requestDescCreatedAt := requestMixinFields0[0].Descriptor()
	// request.DefaultCreatedAt holds the default value on creation for the created_at field.
	request.DefaultCreatedAt = requestDescCreatedAt.Default.(func() time.Time)
	// requestDescUpdatedAt is the schema descriptor for updated_at field.
	requestDescUpdatedAt := requestMixinFields0[1].Descriptor()
	// request.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	request.DefaultUpdatedAt = requestDescUpdatedAt.Default.(func() time.Time)
	// request.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	request.UpdateDefaultUpdatedAt = requestDescUpdatedAt.UpdateDefault.(func() time.Time)
	// requestDescDeletedAt is the schema descriptor for deleted_at field.
	requestDescDeletedAt := requestMixinFields1[0].Descriptor()
	// request.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	request.DefaultDeletedAt = requestDescDeletedAt.Default.(int)
	// requestDescFormat is the schema descriptor for format field.
	requestDescFormat := requestFields[4].Descriptor()
	// request.DefaultFormat holds the default value on creation for the format field.
	request.DefaultFormat = requestDescFormat.Default.(string)
	requestexecutionMixin := schema.RequestExecution{}.Mixin()
	requestexecutionMixinFields0 := requestexecutionMixin[0].Fields()
	_ = requestexecutionMixinFields0
	requestexecutionFields := schema.RequestExecution{}.Fields()
	_ = requestexecutionFields
	// requestexecutionDescCreatedAt is the schema descriptor for created_at field.
	requestexecutionDescCreatedAt := requestexecutionMixinFields0[0].Descriptor()
	// requestexecution.DefaultCreatedAt holds the default value on creation for the created_at field.
	requestexecution.DefaultCreatedAt = requestexecutionDescCreatedAt.Default.(func() time.Time)
	// requestexecutionDescUpdatedAt is the schema descriptor for updated_at field.
	requestexecutionDescUpdatedAt := requestexecutionMixinFields0[1].Descriptor()
	// requestexecution.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	requestexecution.DefaultUpdatedAt = requestexecutionDescUpdatedAt.Default.(func() time.Time)
	// requestexecution.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	requestexecution.UpdateDefaultUpdatedAt = requestexecutionDescUpdatedAt.UpdateDefault.(func() time.Time)
	// requestexecutionDescFormat is the schema descriptor for format field.
	requestexecutionDescFormat := requestexecutionFields[5].Descriptor()
	// requestexecution.DefaultFormat holds the default value on creation for the format field.
	requestexecution.DefaultFormat = requestexecutionDescFormat.Default.(string)
	roleMixin := schema.Role{}.Mixin()
	role.Policy = privacy.NewPolicies(schema.Role{})
	role.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := role.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	roleMixinHooks1 := roleMixin[1].Hooks()

	role.Hooks[1] = roleMixinHooks1[0]
	roleMixinInters1 := roleMixin[1].Interceptors()
	role.Interceptors[0] = roleMixinInters1[0]
	roleMixinFields0 := roleMixin[0].Fields()
	_ = roleMixinFields0
	roleMixinFields1 := roleMixin[1].Fields()
	_ = roleMixinFields1
	roleFields := schema.Role{}.Fields()
	_ = roleFields
	// roleDescCreatedAt is the schema descriptor for created_at field.
	roleDescCreatedAt := roleMixinFields0[0].Descriptor()
	// role.DefaultCreatedAt holds the default value on creation for the created_at field.
	role.DefaultCreatedAt = roleDescCreatedAt.Default.(func() time.Time)
	// roleDescUpdatedAt is the schema descriptor for updated_at field.
	roleDescUpdatedAt := roleMixinFields0[1].Descriptor()
	// role.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	role.DefaultUpdatedAt = roleDescUpdatedAt.Default.(func() time.Time)
	// role.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	role.UpdateDefaultUpdatedAt = roleDescUpdatedAt.UpdateDefault.(func() time.Time)
	// roleDescDeletedAt is the schema descriptor for deleted_at field.
	roleDescDeletedAt := roleMixinFields1[0].Descriptor()
	// role.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	role.DefaultDeletedAt = roleDescDeletedAt.Default.(int)
	// roleDescScopes is the schema descriptor for scopes field.
	roleDescScopes := roleFields[2].Descriptor()
	// role.DefaultScopes holds the default value on creation for the scopes field.
	role.DefaultScopes = roleDescScopes.Default.([]string)
	systemMixin := schema.System{}.Mixin()
	system.Policy = privacy.NewPolicies(schema.System{})
	system.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := system.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	systemMixinHooks1 := systemMixin[1].Hooks()

	system.Hooks[1] = systemMixinHooks1[0]
	systemMixinInters1 := systemMixin[1].Interceptors()
	system.Interceptors[0] = systemMixinInters1[0]
	systemMixinFields0 := systemMixin[0].Fields()
	_ = systemMixinFields0
	systemMixinFields1 := systemMixin[1].Fields()
	_ = systemMixinFields1
	systemFields := schema.System{}.Fields()
	_ = systemFields
	// systemDescCreatedAt is the schema descriptor for created_at field.
	systemDescCreatedAt := systemMixinFields0[0].Descriptor()
	// system.DefaultCreatedAt holds the default value on creation for the created_at field.
	system.DefaultCreatedAt = systemDescCreatedAt.Default.(func() time.Time)
	// systemDescUpdatedAt is the schema descriptor for updated_at field.
	systemDescUpdatedAt := systemMixinFields0[1].Descriptor()
	// system.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	system.DefaultUpdatedAt = systemDescUpdatedAt.Default.(func() time.Time)
	// system.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	system.UpdateDefaultUpdatedAt = systemDescUpdatedAt.UpdateDefault.(func() time.Time)
	// systemDescDeletedAt is the schema descriptor for deleted_at field.
	systemDescDeletedAt := systemMixinFields1[0].Descriptor()
	// system.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	system.DefaultDeletedAt = systemDescDeletedAt.Default.(int)
	usagelogMixin := schema.UsageLog{}.Mixin()
	usagelog.Policy = privacy.NewPolicies(schema.UsageLog{})
	usagelog.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := usagelog.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	usagelogMixinHooks1 := usagelogMixin[1].Hooks()

	usagelog.Hooks[1] = usagelogMixinHooks1[0]
	usagelogMixinInters1 := usagelogMixin[1].Interceptors()
	usagelog.Interceptors[0] = usagelogMixinInters1[0]
	usagelogMixinFields0 := usagelogMixin[0].Fields()
	_ = usagelogMixinFields0
	usagelogMixinFields1 := usagelogMixin[1].Fields()
	_ = usagelogMixinFields1
	usagelogFields := schema.UsageLog{}.Fields()
	_ = usagelogFields
	// usagelogDescCreatedAt is the schema descriptor for created_at field.
	usagelogDescCreatedAt := usagelogMixinFields0[0].Descriptor()
	// usagelog.DefaultCreatedAt holds the default value on creation for the created_at field.
	usagelog.DefaultCreatedAt = usagelogDescCreatedAt.Default.(func() time.Time)
	// usagelogDescUpdatedAt is the schema descriptor for updated_at field.
	usagelogDescUpdatedAt := usagelogMixinFields0[1].Descriptor()
	// usagelog.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	usagelog.DefaultUpdatedAt = usagelogDescUpdatedAt.Default.(func() time.Time)
	// usagelog.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	usagelog.UpdateDefaultUpdatedAt = usagelogDescUpdatedAt.UpdateDefault.(func() time.Time)
	// usagelogDescDeletedAt is the schema descriptor for deleted_at field.
	usagelogDescDeletedAt := usagelogMixinFields1[0].Descriptor()
	// usagelog.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	usagelog.DefaultDeletedAt = usagelogDescDeletedAt.Default.(int)
	// usagelogDescPromptTokens is the schema descriptor for prompt_tokens field.
	usagelogDescPromptTokens := usagelogFields[4].Descriptor()
	// usagelog.DefaultPromptTokens holds the default value on creation for the prompt_tokens field.
	usagelog.DefaultPromptTokens = usagelogDescPromptTokens.Default.(int)
	// usagelogDescCompletionTokens is the schema descriptor for completion_tokens field.
	usagelogDescCompletionTokens := usagelogFields[5].Descriptor()
	// usagelog.DefaultCompletionTokens holds the default value on creation for the completion_tokens field.
	usagelog.DefaultCompletionTokens = usagelogDescCompletionTokens.Default.(int)
	// usagelogDescTotalTokens is the schema descriptor for total_tokens field.
	usagelogDescTotalTokens := usagelogFields[6].Descriptor()
	// usagelog.DefaultTotalTokens holds the default value on creation for the total_tokens field.
	usagelog.DefaultTotalTokens = usagelogDescTotalTokens.Default.(int)
	// usagelogDescPromptAudioTokens is the schema descriptor for prompt_audio_tokens field.
	usagelogDescPromptAudioTokens := usagelogFields[7].Descriptor()
	// usagelog.DefaultPromptAudioTokens holds the default value on creation for the prompt_audio_tokens field.
	usagelog.DefaultPromptAudioTokens = usagelogDescPromptAudioTokens.Default.(int)
	// usagelogDescPromptCachedTokens is the schema descriptor for prompt_cached_tokens field.
	usagelogDescPromptCachedTokens := usagelogFields[8].Descriptor()
	// usagelog.DefaultPromptCachedTokens holds the default value on creation for the prompt_cached_tokens field.
	usagelog.DefaultPromptCachedTokens = usagelogDescPromptCachedTokens.Default.(int)
	// usagelogDescCompletionAudioTokens is the schema descriptor for completion_audio_tokens field.
	usagelogDescCompletionAudioTokens := usagelogFields[9].Descriptor()
	// usagelog.DefaultCompletionAudioTokens holds the default value on creation for the completion_audio_tokens field.
	usagelog.DefaultCompletionAudioTokens = usagelogDescCompletionAudioTokens.Default.(int)
	// usagelogDescCompletionReasoningTokens is the schema descriptor for completion_reasoning_tokens field.
	usagelogDescCompletionReasoningTokens := usagelogFields[10].Descriptor()
	// usagelog.DefaultCompletionReasoningTokens holds the default value on creation for the completion_reasoning_tokens field.
	usagelog.DefaultCompletionReasoningTokens = usagelogDescCompletionReasoningTokens.Default.(int)
	// usagelogDescCompletionAcceptedPredictionTokens is the schema descriptor for completion_accepted_prediction_tokens field.
	usagelogDescCompletionAcceptedPredictionTokens := usagelogFields[11].Descriptor()
	// usagelog.DefaultCompletionAcceptedPredictionTokens holds the default value on creation for the completion_accepted_prediction_tokens field.
	usagelog.DefaultCompletionAcceptedPredictionTokens = usagelogDescCompletionAcceptedPredictionTokens.Default.(int)
	// usagelogDescCompletionRejectedPredictionTokens is the schema descriptor for completion_rejected_prediction_tokens field.
	usagelogDescCompletionRejectedPredictionTokens := usagelogFields[12].Descriptor()
	// usagelog.DefaultCompletionRejectedPredictionTokens holds the default value on creation for the completion_rejected_prediction_tokens field.
	usagelog.DefaultCompletionRejectedPredictionTokens = usagelogDescCompletionRejectedPredictionTokens.Default.(int)
	// usagelogDescFormat is the schema descriptor for format field.
	usagelogDescFormat := usagelogFields[14].Descriptor()
	// usagelog.DefaultFormat holds the default value on creation for the format field.
	usagelog.DefaultFormat = usagelogDescFormat.Default.(string)
	userMixin := schema.User{}.Mixin()
	user.Policy = privacy.NewPolicies(schema.User{})
	user.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := user.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	userMixinHooks1 := userMixin[1].Hooks()

	user.Hooks[1] = userMixinHooks1[0]
	userMixinInters1 := userMixin[1].Interceptors()
	user.Interceptors[0] = userMixinInters1[0]
	userMixinFields0 := userMixin[0].Fields()
	_ = userMixinFields0
	userMixinFields1 := userMixin[1].Fields()
	_ = userMixinFields1
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userMixinFields0[0].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userMixinFields0[1].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescDeletedAt is the schema descriptor for deleted_at field.
	userDescDeletedAt := userMixinFields1[0].Descriptor()
	// user.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	user.DefaultDeletedAt = userDescDeletedAt.Default.(int)
	// userDescPreferLanguage is the schema descriptor for prefer_language field.
	userDescPreferLanguage := userFields[2].Descriptor()
	// user.DefaultPreferLanguage holds the default value on creation for the prefer_language field.
	user.DefaultPreferLanguage = userDescPreferLanguage.Default.(string)
	// userDescFirstName is the schema descriptor for first_name field.
	userDescFirstName := userFields[4].Descriptor()
	// user.DefaultFirstName holds the default value on creation for the first_name field.
	user.DefaultFirstName = userDescFirstName.Default.(string)
	// userDescLastName is the schema descriptor for last_name field.
	userDescLastName := userFields[5].Descriptor()
	// user.DefaultLastName holds the default value on creation for the last_name field.
	user.DefaultLastName = userDescLastName.Default.(string)
	// userDescIsOwner is the schema descriptor for is_owner field.
	userDescIsOwner := userFields[7].Descriptor()
	// user.DefaultIsOwner holds the default value on creation for the is_owner field.
	user.DefaultIsOwner = userDescIsOwner.Default.(bool)
	// userDescScopes is the schema descriptor for scopes field.
	userDescScopes := userFields[8].Descriptor()
	// user.DefaultScopes holds the default value on creation for the scopes field.
	user.DefaultScopes = userDescScopes.Default.([]string)
}

const (
	Version = "v0.14.4"                                         // Version of ent codegen.
	Sum     = "h1:/DhDraSLXIkBhyiVoJeSshr4ZYi7femzhj6/TckzZuI=" // Sum of ent codegen.
)
