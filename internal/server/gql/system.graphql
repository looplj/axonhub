
input InitializeSystemInput {
  ownerEmail: String!
  ownerPassword: String!
  ownerFirstName: String!
  ownerLastName: String!
  brandName: String!
}

type InitializeSystemPayload {
  success: Boolean!
  message: String!
  user: User
  token: String
}

type SystemStatus {
  isInitialized: Boolean!
}

type SystemSettings {
  storeChunks: Boolean!
  brandName: String
  brandLogo: String
}

type BrandSettings {
  name: String
  logo: String
}

input UpdateSystemSettingsInput {
  storeChunks: Boolean
  brandName: String
  brandLogo: String
}

extend type Mutation {
  initializeSystem(input: InitializeSystemInput!): InitializeSystemPayload!
  updateSystemSettings(input: UpdateSystemSettingsInput!): Boolean!
}


extend type Query {
  systemStatus: SystemStatus!
  systemSettings: SystemSettings!
  brandSettings: BrandSettings!
}