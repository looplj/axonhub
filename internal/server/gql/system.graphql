
input InitializeSystemInput {
  ownerEmail: String!
  ownerPassword: String!
  ownerFirstName: String!
  ownerLastName: String!
  brandName: String!
}

type InitializeSystemPayload {
  success: Boolean!
  message: String!
  user: User
  token: String
}

type SystemStatus {
  isInitialized: Boolean!
}

type BrandSettings {
  brandName: String
  brandLogo: String
}

type StoragePolicy {
  storeChunks: Boolean!
  cleanupOptions: [CleanupOption!]!
}

type CleanupOption {
  resourceType: String!
  enabled: Boolean!
  cleanupDays: Int!
}

input UpdateBrandSettingsInput {
  brandName: String
  brandLogo: String
}

input UpdateStoragePolicyInput {
  storeChunks: Boolean
  cleanupOptions: [CleanupOptionInput!]
}

input CleanupOptionInput {
  resourceType: String!
  enabled: Boolean!
  cleanupDays: Int!
}

extend type Mutation {
  updateBrandSettings(input: UpdateBrandSettingsInput!): Boolean!
  updateStoragePolicy(input: UpdateStoragePolicyInput!): Boolean!
}

extend type Query {
  systemStatus: SystemStatus!
  brandSettings: BrandSettings!
  storagePolicy: StoragePolicy!
}